name: Deploy Pipeline

on:
  push:
    branches: [main]
  # pull_request:
  #   branches: [develop]
  #   types: [opened, synchronize]

jobs:

  # avoid_reduncy:
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: n1hility/cancel-previous-runs@v3
  #     with: 
  #       token: ${{ secrets.GITHUB_TOKEN }}

  # install:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v2
  #       with:
  #         cache: 'npm'
  #         node-version: '16'
  #     - name: Install dependencies
  #       run: npm ci

  # lint:
  #   needs: install
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v2
  #       with:
  #         cache: 'npm'
  #         node-version: '16'
  #     - name: Intall concurrently
  #       run: npm install -g concurrently
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Lint
  #       run: npm run lint

  # build:
  #   needs: install
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v2
  #       with:
  #         cache: 'npm'
  #         node-version: '16'
  #     - name: Intall concurrently
  #       run: npm install -g concurrently
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Build
  #       run: npm run build
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: dist
  #         path: dist

  # test:
  #   # needs: [install, lint, build]
  #   needs: [install, lint]
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v2
  #       with:
  #         cache: 'npm'
  #         node-version: '16'
  #     - name: Install dependencies
  #       run: npm run install
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: dist
  #         path: dist
  #     - name: Test
  #       run: npm test

  EC2-Deploy:
    # needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker compose up -d

      - name: Deploy to EC2
        uses: bitovi/github-actions-deploy-docker-to-ec2@v0.5.0
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_default_region: us-east-2
          image_name: fast-delivery-dos
          image_tag: latest