name: Deployment Pipeline

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
    types: [opened, synchronize]

jobs:

  avoid_reduncy:
    runs-on: ubuntu-18.04
    steps:
      - name: Cancel Previous Redundant Builds
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  lint:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Intall concurrently
        run: npm install -g concurrently
      - name: Install dependencies
        run: npm run install
      - name: Lint
        run: npm run lint

  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Intall concurrently
        run: npm install -g concurrently
      - name: Install dependencies
        run: npm run install
      - name: Build
        run: npm run build
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  # test:
  #   needs: [lint, build]
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '14'
  #     - name: Install dependencies
  #       run: npm run install
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: dist
  #         path: dist
  #     - name: Test
  #       run: npm test

  deploy:
    # needs: [test]
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image for API
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: fast-delivery-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd api
        docker build -t $REGISTRY/$REPOSITORY/api:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY/api:$IMAGE_TAG

    - name: Build and push Docker image for client
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: fast-delivery-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd client
        docker build -t $REGISTRY/$REPOSITORY/client:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY/client:$IMAGE_TAG